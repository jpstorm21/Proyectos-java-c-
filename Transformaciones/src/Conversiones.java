/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author maick
 */
public class Conversiones extends javax.swing.JFrame {

    /**
     * Creates new form Conversiones
     */
    public Conversiones() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxConversionDesde = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldConversionDesde = new javax.swing.JTextField();
        jTextFieldConversionA = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxConversionA = new javax.swing.JComboBox<>();
        jLabelA = new javax.swing.JLabel();
        jButtonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(679, 468));
        setName("Conversiones"); // NOI18N
        setResizable(false);

        jComboBoxConversionDesde.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Decimal", "Binario", "Hexadecimal", "Octal" }));
        jComboBoxConversionDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxConversionDesdeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        jLabel2.setText("Conversion");

        jTextFieldConversionDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldConversionDesdeActionPerformed(evt);
            }
        });

        jTextFieldConversionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldConversionAActionPerformed(evt);
            }
        });

        jButton1.setText("Convertir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Desde:");

        jComboBoxConversionA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Decimal", "Binario", "Hexadecimal", "Octal" }));

        jLabelA.setText("A:");

        jButtonAtras.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonAtras.setText("Atras");
        jButtonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBoxConversionDesde, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextFieldConversionDesde, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBoxConversionA, 0, 182, Short.MAX_VALUE)
                        .addComponent(jTextFieldConversionA))
                    .addComponent(jLabelA))
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(jLabel2)
                .addContainerGap(232, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxConversionDesde)
                    .addComponent(jComboBoxConversionA))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldConversionA, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldConversionDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(jButtonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxConversionDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxConversionDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxConversionDesdeActionPerformed

    private void jTextFieldConversionDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldConversionDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldConversionDesdeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String numero= jTextFieldConversionDesde.getText();
        int desde= jComboBoxConversionDesde.getSelectedIndex();
        int a= jComboBoxConversionA.getSelectedIndex();
        int decimalTransformado=0;
        
        if(desde==0){
            decimalTransformado=Integer.parseInt(numero);
        }else{
            if(desde==1){
                decimalTransformado=binarioAdecimal(numero);
            }else{
                if(desde==2){
                    decimalTransformado=hexadecimalAdecimal(numero);
                }else{
                    decimalTransformado= Integer.parseInt(""+octalAdecimal(Integer.parseInt(numero)));
                }
            }
        }
        
        if(a==0){
            jTextFieldConversionA.setText(""+decimalTransformado);
        }else{
            if(a==1){
                jTextFieldConversionA.setText(decimalAbinario(decimalTransformado));
            }else{
                if(a==2){
                    jTextFieldConversionA.setText(decimalAhexadecimal(decimalTransformado));
                }else{
                    jTextFieldConversionA.setText(""+decimalAoctal(""+decimalTransformado));
                }
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtrasActionPerformed
        String []args= new String[1];
        Interfaz.main(args);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAtrasActionPerformed

    private void jTextFieldConversionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldConversionAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldConversionAActionPerformed
    
    public static String decimalAoctal(String numero){
        return decimalAoctalRec(Integer.parseInt(numero));
    }
    public static String decimalAoctalRec(int numero) {
        if (numero / 8 != 0) {
            return decimalAoctalRec(numero/8) + Integer.toString(numero % 8);
        }
        return Integer.toString(numero % 8);
    }
    
    public static int octalAdecimal(int numero){
        return decimalAoctalRec(""+numero);
    }    
    public static int decimalAoctalRec(String numero) {
        int sum = 0;
        int j = 0;
        for (int i = numero.length() - 1; i > -1; i--) {
            sum = sum + Integer.parseInt(String.valueOf(numero.charAt(j))) * ((int) Math.pow(8, i));
            j++;
        }
        return sum;
    }

    public static int binarioAdecimal(String binario) {
        int sum = 0;
        int j = 0;
        for (int i = binario.length() - 1; i > -1; i--) {
            sum = sum + Integer.parseInt(String.valueOf(binario.charAt(j))) * ((int) Math.pow(2, i));
            j++;
        }
        return sum;
    }

    public static String decimalAbinario(int numero) {
        if (numero / 2 >= 1) {
            if (numero % 2 == 0) {
                return decimalAbinario(numero / 2) + "0";
            } else {
                return decimalAbinario(numero / 2) + "1";
            }
        } else if (numero % 2 == 1) {
            return "1";
        } else {
            return "0";
        }
    }

    private static String decimalAhexadecimal(int numero) {
        String[] digito = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"};
        int valor = numero / 16;
        int resto = numero % 16;

        if (numero < 16) {
            return digito[resto];

        } else {
            return decimalAhexadecimal(valor) + digito[resto];
        }
    }

    private static int hexadecimalAdecimal(String numero) {
        int suma = 0;
        int j = 0;

        for (int i = numero.length() - 1; i > -1; i--) {
            if (numero.charAt(j) == 'A' || numero.charAt(j) == 'a') {
                suma = suma + 10 * (int) Math.pow(16, i);
            } else if (numero.charAt(j) == 'B' || numero.charAt(j) == 'b') {
                suma = suma + 11 * (int) Math.pow(16, i);
            } else if (numero.charAt(j) == 'C' || numero.charAt(j) == 'c') {
                suma = suma + 12 * (int) Math.pow(16, i);
            } else if (numero.charAt(j) == 'D' || numero.charAt(j) == 'd') {
                suma = suma + 13 * (int) Math.pow(16, i);
            } else if (numero.charAt(j) == 'E' || numero.charAt(j) == 'e') {
                suma = suma + 14 * (int) Math.pow(16, i);
            } else if (numero.charAt(j) == 'F' || numero.charAt(j) == 'f') {
                suma = suma + 15 * (int) Math.pow(16, i);
            } else {
                suma = suma + Integer.parseInt(String.valueOf(numero.charAt(j))) * (int) Math.pow(16, i);
            }
            j++;
        }
        return suma;
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversiones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversiones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAtras;
    private javax.swing.JComboBox<String> jComboBoxConversionA;
    private javax.swing.JComboBox<String> jComboBoxConversionDesde;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JTextField jTextFieldConversionA;
    private javax.swing.JTextField jTextFieldConversionDesde;
    // End of variables declaration//GEN-END:variables
}
